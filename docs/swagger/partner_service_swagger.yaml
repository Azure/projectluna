swagger: '2.0'
info:
  title: Luna.Partner.Functions
  version: V1
host: localhost:7071
schemes:
  - http
paths:
  '/api/partnerServices/{name}':
    get:
      tags:
        - Partner service
      summary: Get a partner service
      operationId: getApiPartnerServicesByName
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          description: Name of the partner service
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Luna.Partner.PublicClient.DataContract.PartnerServices.BasePartnerServiceConfiguration'
      security:
        - x-functions-key: [ ]
    patch:
      tags:
        - Partner service
      summary: Update a partner service
      operationId: patchApiPartnerServicesByName
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          description: Name of the partner service
          required: true
          type: string
        - in: body
          name: body
          description: Request contract
          required: true
          schema:
            $ref: '#/definitions/Luna.Partner.PublicClient.DataContract.PartnerServices.BasePartnerServiceConfiguration'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Luna.Partner.PublicClient.DataContract.PartnerServices.BasePartnerServiceConfiguration'
      security:
        - x-functions-key: [ ]
    put:
      tags:
        - Partner service
      summary: Add a partner service
      operationId: putApiPartnerServicesByName
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          description: Name of the partner service
          required: true
          type: string
        - in: body
          name: body
          description: Request contract
          required: true
          schema:
            $ref: '#/definitions/Luna.Partner.PublicClient.DataContract.PartnerServices.BasePartnerServiceConfiguration'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Luna.Partner.PublicClient.DataContract.PartnerServices.BasePartnerServiceConfiguration'
      security:
        - x-functions-key: [ ]
  /api/partnerServices:
    get:
      tags:
        - Partner service
      summary: List partner services by type
      operationId: getApiPartnerServices
      produces:
        - application/json
      parameters:
        - in: query
          name: type
          description: Partner service type
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Luna.Partner.PublicClient.DataContract.PartnerServices.BasePartnerServiceConfiguration'
      security:
        - x-functions-key: [ ]
definitions:
  Luna.Partner.PublicClient.DataContract.PartnerServices.BasePartnerServiceConfiguration:
    required:
      - DisplayName
      - Description
      - Type
      - Tags
    type: object
    properties:
      DisplayName:
        type: string
      Description:
        type: string
      Type:
        type: string
      Tags:
        type: string
    example:
      Region: westus
      ResourceId: /subscriptions/a22070aa-cb0d-448e-b49f-8bed7e98ac02/resourceGroups/rg-name/providers/Microsoft.MachineLearningServices/workspaces/workspace-name
      TenantId: 8145772a-e215-4bc1-a00a-38da2e39649b
      ClientId: 9298a238-dda6-406f-a281-8a05b6d42e60
      ClientSecret: my-client-secret
      DisplayName: My Azure ML workspace
      Description: Azure ML workspace
      Type: AzureML
      Tags: purpose=prod;org=hr
securityDefinitions:
  x-functions-key:
    type: apiKey
    name: x-functions-key
    in: header
    description: Azure function key